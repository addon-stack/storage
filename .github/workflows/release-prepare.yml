name: Release Prepare

on:
  push:
    branches:
      - 'release/*'

permissions:
  contents: write
  pull-requests: write

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  prepare:
    name: Prepare release with Changesets (version + changelog)
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate versions & changelog (changeset version)
        run: npx changeset version
        env:
          HUSKY: 0
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect changes after versioning
        id: changes
        shell: bash
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
            git status --porcelain
          fi

      - name: Commit version & changelog changes into prep branch
        if: steps.changes.outputs.has_changes == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        env:
          HUSKY: 0
        with:
          commit_message: "chore: version packages (prepare release)"
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          branch: changeset/prepare-${{ github.ref_name }}
          create_branch: true
          push_options: --force-with-lease

      - name: Open or update PR to release branch
        if: steps.changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const releaseBranch = context.ref.replace('refs/heads/', '');
            const headBranch = `changeset/prepare-${releaseBranch}`;
            const base = releaseBranch;
            const title = 'chore: release (prepared by Changesets)';
            const body = 'This PR was automatically created by release-prepare workflow. It contains version bumps and CHANGELOG updates generated by Changesets.';

            const existing = await github.rest.pulls.list({ owner, repo, state: 'open', head: `${owner}:${headBranch}`, base });
            if (existing.data.length > 0) {
              const pr = existing.data[0];
              await github.rest.pulls.update({ owner, repo, pull_number: pr.number, title, body });
              core.info(`Updated PR #${pr.number}: ${pr.html_url}`);
              return;
            }

            try {
              const cmp = await github.rest.repos.compareCommits({ owner, repo, base, head: headBranch });
              if (!cmp.data.ahead_by) {
                core.info(`No commits ahead in ${headBranch} vs ${base}. Skipping PR creation.`);
                return;
              }
            } catch (e) {
              core.info(`compareCommits failed: ${e.message}`);
            }

            const pr = await github.rest.pulls.create({ owner, repo, head: headBranch, base, title, body });
            core.info(`Created PR #${pr.data.number}: ${pr.data.html_url}`);
